---
import ModeToggle from '@/components/ModeToggle'
import { Separator } from '@/components/ui/separator'
import MobileNav from '@/components/shared/MobileNav'
import { LINKS } from '@/constants/navigation'
import { authClient } from '@/lib/auth-client'
import { auth } from "@/lib/auth";
 
const session = await auth.api.getSession({
  headers: Astro.request.headers,
});

const filteredLinks = LINKS.filter(link => {
  if (link.showAlways) return true;
  if (session && link.showOnlyWhenLoggedIn) return true;
  if (!session && link.showOnlyWhenLoggedOut) return true;
  return false;
});
---

<div class='sticky top-0 z-10 backdrop-blur-sm transition-all duration-300'>
	<nav
		class='flex items-center justify-between max-w-6xl mx-auto h-14 p-4 md:px-12'
	>
		<div class='flex items-center justify-center'>
			<a href='/' class='text-xl transition-colors'>Kaiselion</a>
		</div>

		<!-- Desktop Menu -->
		<div class='hidden md:flex h-8 items-center gap-8'>
			{
				filteredLinks.map((link) => (
					<a
						href={link.href}
						class='font-semibold hover:text-secondary transition-colors'
					>
						{link.label}
					</a>
				))
			}
			<ModeToggle client:load />
		</div>

		<!-- Mobile Menu -->
		<div class='md:hidden flex items-center gap-4'>
			<ModeToggle client:load />
			<MobileNav client:load session={session} />
		</div>
	</nav>

	<Separator />
</div>

<style>
	@reference '@/styles/global.css';
	a {
		@apply font-bold hover:text-secondary dark:hover:text-secondary;
	}
</style>

<script>
	import { authClient } from '@/lib/auth-client'
	const navBar = document.querySelector('nav') as HTMLElement
	navBar.addEventListener('click', async (e) => {
    if (e.target instanceof HTMLAnchorElement) {
			const href = e.target.href
      if (href.includes('/logout')) {
				e.preventDefault()
        await authClient.signOut({
          fetchOptions: {
            onSuccess: () => {
              window.location.href = '/login'
            }
          }
        })
      }
    }
  })
</script>
